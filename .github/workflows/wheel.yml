name: Python wheels

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  pull_request:
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      # Ensure there is NO prebuilt .so inside the package
      - name: Clean any prebuilt native libs
        run: |
          rm -f python/tacozip/libtacozip.* || true
          git status --porcelain

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel==2.*

      - name: Build wheels with cibuildwheel
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686 *-musllinux_*"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_WINDOWS: "AMD64"

          # Build INSIDE each platform env, then copy lib into python/tacozip/
          CIBW_BEFORE_ALL_LINUX: >
            bash -exc "
              python -m pip install cmake ninja &&
              cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DTACOZIP_ENABLE_IPO=OFF &&
              cmake --build build -j &&
              mkdir -p python/tacozip &&
              cp build/libtacozip.so python/tacozip/
            "
          CIBW_BEFORE_ALL_MACOS: >
            bash -exc "
              python -m pip install cmake ninja delocate &&
              cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release &&
              cmake --build build -j &&
              mkdir -p python/tacozip &&
              cp build/libtacozip.dylib python/tacozip/
            "
          CIBW_BEFORE_ALL_WINDOWS: >
            bash -exc "
              python -m pip install cmake ninja &&
              cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release &&
              cmake --build build -j &&
              mkdir -p python/tacozip &&
              cp build/tacozip.dll python/tacozip/ || cp build/Release/tacozip.dll python/tacozip/
            "

          # manylinux policy (default is fine, but set explicitly if you want)
          CIBW_MANYLINUX_X86_64: manylinux2014
          CIBW_MANYLINUX_AARCH64: manylinux2014

          # macOS: repair
          CIBW_BEFORE_BUILD_MACOS: "pip install delocate"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: "delocate-wheel -w {dest_dir} -v {wheel}"
        run: |
          cibuildwheel python --output-dir wheelhouse
          ls -l wheelhouse
